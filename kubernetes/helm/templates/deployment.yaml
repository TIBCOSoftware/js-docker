apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "jasperreports-server-pro.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "jasperreports-server-pro.name" . }}
    helm.sh/chart: {{ include "jasperreports-server-pro.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.jasperReportsServerContainer.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "jasperreports-server-pro.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "jasperreports-server-pro.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - image: {{ include "jasperreports-server-pro.image" . }}
        name: {{ include "jasperreports-server-pro.name" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: DB_HOST
            {{- if .Values.postgresql.enabled }}
            value: "{{ .Release.Name }}-postgresql"
            {{ else }}
            value: {{ .Values.repositoryDatabase.host | quote }}
            {{- end }}
          - name: DB_PORT
            value: {{ .Values.repositoryDatabase.port | quote }}
          - name: DB_NAME
            value: {{ .Values.repositoryDatabase.database | quote }}
          - name: DB_USER
            value: {{ .Values.repositoryDatabase.user | quote }}
          - name: DB_PASSWORD
            value: {{ .Values.repositoryDatabase.password | quote }}
          #  valueFrom:
          #    secretKeyRef:
          #      name: repository-pass
          #      key: password
          {{- if .Values.jmsCacheService.enabled }}
          - name: JAVA_OPTS
            value: "-Djasperserver.cache.jms.provider=tcp://{{ include "jmsCacheService.fullname" . }}:{{.Values.jmsCacheService.port}}"
          {{- end }}
          {{- if .Values.jasperReportsServerContainer.aws.s3ConfigBucket }}
          - name: S3_BUCKET_NAME
            value: {{ .Values.jasperReportsServerContainer.aws.s3ConfigBucket | quote }}
          {{- end }}

        ports:
          - name: http
            containerPort: {{ .Values.jasperReportsServerContainer.http.containerPort }}
          - name: https
            containerPort: {{ .Values.jasperReportsServerContainer.https.containerPort }}
        livenessProbe:
          httpGet:
            path: /jasperserver-pro/login.html
            port: http
          initialDelaySeconds: 300
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /jasperserver-pro/login.html
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 3
          periodSeconds: 5

        {{- if .Values.jasperReportsServerContainer.mount.enabled }}
        volumeMounts:
          - name: jasperserver-pro-extensions
            mountPath: /usr/local/share/jasperserver-pro

      volumes:
        - name: jasperserver-pro-extensions
          persistentVolumeClaim:
            claimName: {{ include "jasperreports-server-pro-volume.name" . }}
        {{- end }}
{{- with .Values.jasperReportsServerContainer.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.jasperReportsServerContainer.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.jasperReportsServerContainer.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.jasperReportsServerContainer.resources }}
      resources:
{{ toYaml . | indent 8 }}
{{- end }}
