{{- if  .Values.logging.enabled -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: {{.Release.Namespace }}
  labels:
    app: fluentd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
  labels:
    app: fluentd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - namespaces
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: fluentd
    namespace: {{.Release.Namespace }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: {{.Release.Namespace }}
  labels:
    app: fluentd
spec:
  selector:
    matchLabels:
      app: fluentd
  template:
    metadata:
      labels:
        app: fluentd
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
        - name: fluentd
          image: {{ .Values.logging.fluentd.imageName }}:{{ .Values.logging.fluentd.imageTag }}
          env:
              - name:  FLUENT_ELASTICSEARCH_HOST
                value: "{{ .Release.Name }}-elasticsearch.{{.Release.Namespace }}.svc.cluster.local"
              - name:  FLUENT_ELASTICSEARCH_PORT
                value: "{{ .Values.logging.fluentd.esPort }}"
              - name: FLUENT_ELASTICSEARCH_SCHEME
                value: "http"
              - name: FLUENTD_SYSTEMD_CONF
                value: disable
              - name: FLUENT_CONTAINER_TAIL_PARSER_TYPE
                value: cri
              - name: FLUENT_CONTAINER_TAIL_EXCLUDE_PATH
                value: /var/log/containers/fluent*
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
  {{- end}}